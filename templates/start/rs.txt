/*
    author:  Maksim1744
    created: ${1:date}
*/

use rlib_io::*;
#[allow(unused_imports)]
use rlib_show::*;
[[type:gstart]]use rlib_rand::*;
[[type:start|tstart|gcj]]
[[type:start|tstart|gcj]]fn solve(cin: &mut Reader, cout: &mut Writer, _test: usize) {
[[type:start|tstart|gcj]]    make_output_macro!(cin, cout);
[[type:start|tstart|gcj]]
[[type:start|tstart|gcj]]    ${0:}
[[type:start|tstart|gcj]]}

fn main() {
    make_io!(cin, cout);
[[type:gstart]]    let mut rng = match std::env::args().nth(1).map(|s| s.parse::<u64>().ok()).flatten() {
[[type:gstart]]        Some(seed) => Rng::from_seed(seed),
[[type:gstart]]        None => Rng::from_time(),
[[type:gstart]]    };
[[type:gstart]]
[[type:gstart]]    ${0:}
[[type:tstart|gcj]]    let tests: usize = cin.read();
[[type:tstart|gcj]]    for test in 1..=tests {
[[type:gcj]]        out!(format!("Case #{}: ", test));
[[type:tstart|gcj]]        solve(&mut cin, &mut cout, test);
[[type:tstart|gcj]]    }
[[type:start]]    solve(&mut cin, &mut cout, 1);
}
